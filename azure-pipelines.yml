trigger:
- main   

pool:
  vmImage: 'ubuntu-latest'  

variables:
  buildConfiguration: 'Release'   

stages:
- stage: Build
  displayName: 'Build .NET App with SonarCloud'
  jobs:                        
  - job: BuildJob
    displayName: 'Build and Analyze Job'
    steps:
    
    # Step 1: Install .NET 8 SDK
    - task: UseDotNet@2
      displayName: 'Install .NET 8 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    # Step 2: Prepare SonarCloud Analysis
    - task: SonarCloudPrepare@3
      inputs:
        SonarCloud: 'SonarCloude'          # Service connection name (Azure DevOps me banaya hua)
        organization: 'pnanabhau'          # SonarCloud Organization ID
        scannerMode: 'dotnet'
        projectKey: 'pnanabhau_-cicd-demo' # SonarCloud Project Key
        projectName: 'cicd-demo'           # SonarCloud Project Name

    # Step 3: Restore dependencies
    - task: DotNetCoreCLI@2
      displayName: 'Restore Dependencies'
      inputs:
        command: 'restore'
        projects: 'HelloWorldApp.csproj'

    # Step 4: Build project
    - task: DotNetCoreCLI@2
      displayName: 'Build .NET Project'
      inputs:
        command: 'build'
        projects: 'HelloWorldApp.csproj'
        arguments: '--configuration $(buildConfiguration)'

    # Step 5: Run SonarCloud Analysis
    - task: SonarCloudAnalyze@3

    # Step 6: Publish SonarCloud Quality Gate Result
    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'

    # Step 7: Publish project (console app, not web)
    - task: DotNetCoreCLI@2
      displayName: 'Publish .NET Project'
      inputs:
        command: 'publish'
        projects: 'HelloWorldApp.csproj'
        publishWebProjects: false
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    # Step 8: Publish build artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
